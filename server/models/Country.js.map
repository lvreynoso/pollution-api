{"version":3,"sources":["../../source/models/Country.js"],"names":["Schema","mongoose","CountrySchema","name","type","String","required","code","years","Types","ObjectId","ref","Country","model"],"mappings":";;;;;;;AAEA;;;;AAFA;AAGA,MAAMA,MAAM,GAAGC,kBAASD,MAAxB;AAEA,MAAME,aAAa,GAAG,IAAIF,MAAJ,CAAW;AAC7BG,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GADuB;AAE7BC,EAAAA,IAAI,EAAE;AAAEH,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAFuB;AAG7BE,EAAAA,KAAK,EAAE,CAAC;AAAEJ,IAAAA,IAAI,EAAEJ,MAAM,CAACS,KAAP,CAAaC,QAArB;AAA+BC,IAAAA,GAAG,EAAE;AAApC,GAAD;AAHsB,CAAX,CAAtB,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAGX,kBAASY,KAAT,CAAe,SAAf,EAA0BX,aAA1B,CAAhB;;eACeU,O","sourcesContent":["// country.js - top level model\n\nimport mongoose from 'mongoose'\nconst Schema = mongoose.Schema;\n\nconst CountrySchema = new Schema({\n    name: { type: String, required: true },\n    code: { type: String, required: true },\n    years: [{ type: Schema.Types.ObjectId, ref: \"Year\" }]\n});\n\n// CountrySchema.pre('save', function(next) {\n//     const country = this;\n//     if (!country.years) {\n//         country.years = [];\n//     }\n//     next();\n// })\n\nconst Country = mongoose.model('Country', CountrySchema);\nexport default Country;\n"],"file":"Country.js"}