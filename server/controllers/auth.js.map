{"version":3,"sources":["../../source/controllers/auth.js"],"names":["auth","express","Router","get","req","res","render","post","user","User","body","newAPIKey","catch","err","console","log","toString","key","result","save","status","send","masterKey","Keys","findOne","level","list","set","token","jwt","sign","_id","process","env","SECRET","expiresIn","cookie","maxAge","httpOnly","redirect","clearCookie","username","password","query","message","comparePassword","isMatch"],"mappings":"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","sourcesContent":["// auth.js\n\nimport express from 'express'\nimport jwt from 'jsonwebtoken'\n\nconst auth = express.Router()\n\n// models\nimport User from '../models/user.js'\nimport Keys from '../models/Keys.js'\n\n// api generator\nimport generateAPIKey from '../lib/generate-api-key.js'\n\nauth.get('/sign-up', (req, res) => {\n    res.render('sign-up');\n})\n\nauth.post('/sign-up', async (req, res) => {\n    let user = new User(req.body);\n    let newAPIKey = await generateAPIKey().catch(err => {\n        console.log(err);\n    });\n    // very important that we use it as a string\n    newAPIKey = newAPIKey.toString()\n    user.key = newAPIKey\n    const result = await user.save().catch(err => {\n        console.log(err);\n        return res.status(400).send({ err: err })\n    });\n\n    const masterKey = await Keys.findOne({ level: 'master' }).catch(err => {\n        console.log(err);\n        return res.status(500).send({ err: err })\n    });\n    masterKey.list.set(newAPIKey, true);\n\n    masterKey.save();\n\n    const token = jwt.sign({ _id: user._id }, process.env.SECRET, { expiresIn: `60 days` });\n    res.cookie(`nToken`, token, { maxAge: 900000, httpOnly: true });\n    res.redirect(`/`);\n})\n\nauth.get('/logout', (req, res) => {\n    res.clearCookie(`nToken`);\n    res.redirect(`/`);\n})\n\nauth.get('/login', (req, res) => {\n    res.render(`login`);\n})\n\nauth.post(`/login`, async (req, res) => {\n    const username = req.body.username;\n    const password = req.body.password;\n    const query = {\n        username: username\n    }\n    const user = await User.findOne(query, `username password`).catch(err => { console.log(err) })\n    if (!user) {\n        // user not found\n        return res.status(401).send({ message: `Wrong username or password` });\n    }\n    // check the password\n    user.comparePassword(password, (err, isMatch) => {\n        if (!isMatch) {\n            return res.status(401).send({ message: `Wrong username or password` });\n        }\n        // create a token\n        const token = jwt.sign({ _id: user._id, username: user.username }, process.env.SECRET, {\n            expiresIn: `60 days`\n        });\n        res.cookie(`nToken`, token, { maxAge: 900000, httpOnly: true });\n        res.redirect(`/`);\n    })\n})\n\nauth.get('/profile', async (req, res) => {\n    const query = {\n        _id: req.user._id\n    }\n    const user = await User.findOne(query).catch(err => {\n        console.log(err);\n        return res.status(500).send(err);\n    })\n    res.render('profile', { user: user });\n})\n\nexport default auth;\n"],"file":"auth.js"}