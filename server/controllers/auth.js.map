{"version":3,"sources":["../../source/controllers/auth.js"],"names":["auth","express","Router","get","req","res","render","post","user","User","body","result","save","catch","err","console","log","status","send","token","jwt","sign","_id","process","env","SECRET","expiresIn","cookie","maxAge","httpOnly","redirect","clearCookie","username","password","query","findOne","message","comparePassword","isMatch"],"mappings":"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","sourcesContent":["// auth.js\n\nimport express from 'express'\nimport jwt from 'jsonwebtoken'\n\nconst auth = express.Router()\n\n// models\nimport User from '../models/user.js'\n\nauth.get('/sign-up', (req, res) => {\n    res.render('sign-up');\n})\n\nauth.post('/sign-up', async (req, res) => {\n    const user = new User(req.body);\n    const result = await user.save().catch(err => {\n        console.log(err);\n        return res.status(400).send({ err: err })\n    });\n    const token = jwt.sign({ _id: user._id }, process.env.SECRET, { expiresIn: `60 days` });\n    res.cookie(`nToken`, token, { maxAge: 900000, httpOnly: true });\n    res.redirect(`/`);\n})\n\nauth.get('/logout', (req, res) => {\n    res.clearCookie(`nToken`);\n    res.redirect(`/`);\n})\n\nauth.get('/login', (req, res) => {\n    res.render(`login`);\n})\n\nauth.post(`/login`, async (req, res) => {\n    const username = req.body.username;\n    const password = req.body.password;\n    const query = {\n        username: username\n    }\n    const user = await User.findOne(query, `username password`).catch(err => { console.log(err) })\n    if (!user) {\n        // user not found\n        return res.status(401).send({ message: `Wrong username or password` });\n    }\n    // check the password\n    user.comparePassword(password, (err, isMatch) => {\n        if (!isMatch) {\n            return res.status(401).send({ message: `Wrong username or password` });\n        }\n        // create a token\n        const token = jwt.sign({ _id: user._id, username: user.username }, process.env.SECRET, {\n            expiresIn: `60 days`\n        });\n        res.cookie(`nToken`, token, { maxAge: 900000, httpOnly: true });\n        res.redirect(`/`);\n    })\n})\n\nexport default auth;\n"],"file":"auth.js"}