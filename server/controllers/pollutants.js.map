{"version":3,"sources":["../../source/controllers/pollutants.js"],"names":["pollutants","express","Router","get","req","res","query","slug","params","pollutant","year","countryCode","code","Pollutant","findOne","catch","err","console","log","status","send","post","Year","populate","pollutantExists","map","entry","name","body","submission","replacement","remove","lower","result","save","push","newYear","put","updatedPollutant","findOneAndUpdate","new","delete","findOneAndDelete"],"mappings":"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","sourcesContent":["// pollutants.js\n\n// app\nimport express from 'express'\nimport slugify from 'slugify'\nconst pollutants = express.Router();\n\n// models\nimport Year from '../models/Year.js'\nimport Pollutant from '../models/Pollutant.js'\n\n// read one pollutant\npollutants.get('/country/:code/year/:year/pollutant/:pollutant', async (req, res) => {\n    let query = {\n        slug: req.params.pollutant,\n        year: req.params.year,\n        countryCode: req.params.code\n    };\n    let pollutant = await Pollutant.findOne(query).catch(err => {\n        console.log(err);\n        return res.status(404).send(err);\n    })\n    res.status(200).send(pollutant);\n})\n\n// create one pollutant\npollutants.post('/country/:code/year/:year/pollutant', async (req, res) => {\n    // console.log(req.body);\n    // pull the proper year\n    let query = {\n        year: req.params.year,\n        code: req.params.code\n    }\n    let year = await Year.findOne(query).populate('pollutants').catch(err => {\n        console.log(err);\n        return res.status(404).send(err);\n    })\n\n    // check for redundancy\n    let pollutantExists = false;\n    year.pollutants.map(entry => {\n        if (entry.name = req.body.name) {\n            pollutantExists = true;\n        }\n    })\n    if (pollutantExists == true) {\n        console.log('POSTed pollutant already exists; aborting');\n        return res.status(400);\n    }\n\n    // create the pollutant object\n    let submission = req.body;\n    submission.slug = slugify(submission.name, {\n        replacement: '-',\n        remove: null,\n        lower: true\n    })\n    submission.year = req.params.year;\n    submission.countryCode = req.params.code;\n    let pollutant = new Pollutant(submission);\n\n    // save it\n    let result = await pollutant.save().catch(err => {\n        console.log(err);\n        return res.status(500).send(err);\n    })\n\n    year.pollutants.push(pollutant);\n    let newYear = await year.save().catch(err => {\n        console.log(err);\n        return res.status(500).send(err);\n    })\n    // console.log(result);\n    res.status(200).send(result);\n})\n\npollutants.put('/country/:code/year/:year/pollutant/:pollutant', async (req, res) => {\n    let updatedPollutant = req.body;\n    let query = {\n        slug: req.params.pollutant,\n        year: req.params.year,\n        countryCode: req.params.code\n    };\n    let result = await Pollutant.findOneAndUpdate(query, updatedPollutant, { new: true}).catch(err => {\n        console.log(err);\n        return res.status(404).send(err);\n    })\n    res.status(200).send(result);\n})\n\npollutants.delete('/country/:code/year/:year/pollutant/:pollutant', async (req, res) => {\n    let updatedPollutant = req.body;\n    let query = {\n        slug: req.params.pollutant,\n        year: req.params.year,\n        countryCode: req.params.code\n    };\n    let result = await Pollutant.findOneAndDelete(query).catch(err => {\n        console.log(err);\n        return res.status(404).send(err);\n    })\n    res.status(200).send(result);\n})\n\nexport default pollutants;\n"],"file":"pollutants.js"}