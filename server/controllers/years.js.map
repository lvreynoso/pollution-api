{"version":3,"sources":["../../source/controllers/years.js"],"names":["years","express","Router","get","req","res","query","year","params","code","Year","findOne","populate","catch","err","console","log","status","send","post","country","Country","body","yearExists","map","entry","_id","result","save","push","put","updatedYear","findOneAndUpdate","new","delete","findOneAndDelete"],"mappings":"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","sourcesContent":["// years.js\n\n// app\nimport express from 'express'\nconst years = express.Router();\n\n// models\nimport Country from '../models/Country.js'\nimport Year from '../models/Year.js'\n\n// read one year\nyears.get('/country/:code/year/:year', async (req, res) => {\n    let query = {\n        year: req.params.year,\n        code: req.params.code\n    }\n    let year = await Year.findOne(query).populate('pollutants').catch(err => {\n        console.log(err);\n        res.status(404).send(err);\n    })\n    res.status(200).send(year);\n})\n\n// create one year\nyears.post('/country/:code/year', async (req, res) => {\n    let query = {\n        code: req.params.code\n    }\n    let country = await Country.findOne(query).populate('years').catch(err => {\n        console.log(err);\n        return res.status(404);\n    });\n\n    let year = new Year(req.body);\n    let yearExists = false;\n    country.years.map(entry => {\n        if (entry.year = year.year) {\n            yearExists = true;\n        }\n    })\n    if (yearExists == true) {\n        console.log('POSTed Year already exists; aborting');\n        return res.status(400);\n    }\n    year.country = country._id;\n    year.code = req.params.code;\n    let result = year.save().catch(err => {\n        console.log(err);\n        return res.status(500);\n    });\n    country.years.push(result);\n    await country.save().catch(err => {\n        console.log(err);\n        return res.status(500);\n    })\n    res.status(200).send(result);\n})\n\n// update one year\nyears.put('/country/:code/year/:year', async (req, res) => {\n    let updatedYear = req.body;\n    let query = {\n        year: req.params.year,\n        code: req.params.code\n    }\n    let result = await Year.findOneAndUpdate(query, updatedYear, { new: true }).catch(err => {\n        console.log(err);\n        res.status(500).send(err);\n    });\n    res.status(200).send(result);\n})\n\n// delete one year\nyears.delete('/country/:code/year/:year', async (req, res) => {\n    let query = {\n        year: req.params.year,\n        code: req.params.code,\n    }\n    let result = await Year.findOneAndDelete(query).catch(err => {\n        console.log(err);\n        res.status(404).send(err);\n    })\n    res.status(200).send(result);\n})\n\nexport default years;\n"],"file":"years.js"}