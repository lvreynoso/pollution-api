{"version":3,"sources":["../../source/controllers/countries.js"],"names":["countries","express","Router","get","req","res","allCountries","Country","find","populate","catch","err","console","log","status","send","query","code","params","country","findOne","post","body","result","save","put","findOneAndUpdate","new","delete","findOneAndDelete"],"mappings":"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","sourcesContent":["// countries.js\n\n// app\nimport express from 'express'\nconst countries = express.Router();\n\n// models\nimport Country from '../models/Country.js'\n\n// returns a list of countries\ncountries.get('/country', async (req, res) => {\n    let allCountries = await Country.find()\n        .populate('years')\n        .catch(err => { console.log(err) });\n    res.status(200).send(allCountries);\n})\n\n// read one country\ncountries.get('/country/:code', async (req, res) => {\n    let query = {\n        code: req.params.code\n    }\n    let country = await Country.findOne(query)\n        .populate('years')\n        .catch(err => { console.log(err) });\n    res.status(200).send(country);\n})\n\n// create one country\ncountries.post('/country', async (req, res) => {\n    let country = new Country(req.body);\n    let result = country.save().catch(err => { console.log(err) });\n    res.status(200).send(result);\n})\n\n// update one country\ncountries.put('/country/:code', async (req, res) => {\n    let query = {\n        code: req.params.code\n    }\n    let country = req.params.body\n    let result = Country.findOneAndUpdate(query, country, { new: true })\n        .catch(err => {\n            console.log(err);\n            return res.status(400);\n        });\n    res.status(200).send(result);\n})\n\n// delete one country\ncountries.delete('/country/:code', async (req, res) => {\n    let query = {\n        code: req.params.code\n    }\n    let result = await Country.findOneAndDelete(query).catch(err => {\n        console.log(err);\n        return res.status(404);\n    })\n    res.status(200).send(result);\n})\n\nexport default countries;\n"],"file":"countries.js"}