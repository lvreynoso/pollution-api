{"version":3,"sources":["../../source/lib/generate-api-key.js"],"names":["generateAPIKey","key","Promise","resolve","reject","hex","i","toString","r","Uint8Array","crypto","randomFill","err","buf","console","log","Buffer","from","buffer","byteOffset","byteLength"],"mappings":";;;;;;;;;AAcA;;;;AAdA;AACA;;AAEA;;;;;;;;;;AAae,SAASA,cAAT,GAA0B;AACrC,MAAIC,GAAG,GAAG,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC5C,QAAIC,GAAG,GAAG,EAAV;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1BD,MAAAA,GAAG,CAACC,CAAD,CAAH,GAAS,CAACA,CAAC,GAAG,EAAJ,GAAS,GAAT,GAAe,EAAhB,IAAuBA,CAAD,CAAIC,QAAJ,CAAa,EAAb,CAA/B;AACH;;AACD,QAAIC,CAAC,GAAG,IAAIC,UAAJ,CAAe,EAAf,CAAR;;AACAC,oBAAOC,UAAP,CAAkBH,CAAlB,EAAqB,CAACI,GAAD,EAAMC,GAAN,KAAc;AAC/B,UAAID,GAAJ,EAAS,MAAMA,GAAN;AACTE,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYJ,GAAG,CAACK,MAAhB,EAAwBL,GAAG,CAACM,UAA5B,EAAwCN,GAAG,CAACO,UAA5C,EACPb,QADO,CACE,KADF,CAAZ;AAGAC,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,GAAO,IAAP,GAAc,IAArB;AACAA,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,GAAO,IAAP,GAAc,IAArB;AAEAL,MAAAA,OAAO,CACHE,GAAG,CAACG,CAAC,CAAC,CAAD,CAAF,CAAH,GACAH,GAAG,CAACG,CAAC,CAAC,CAAD,CAAF,CADH,GAEAH,GAAG,CAACG,CAAC,CAAC,CAAD,CAAF,CAFH,GAGAH,GAAG,CAACG,CAAC,CAAC,CAAD,CAAF,CAHH,GAIA;AACAH,MAAAA,GAAG,CAACG,CAAC,CAAC,CAAD,CAAF,CALH,GAMAH,GAAG,CAACG,CAAC,CAAC,CAAD,CAAF,CANH,GAOA;AACAH,MAAAA,GAAG,CAACG,CAAC,CAAC,CAAD,CAAF,CARH,GASAH,GAAG,CAACG,CAAC,CAAC,CAAD,CAAF,CATH,GAUA;AACAH,MAAAA,GAAG,CAACG,CAAC,CAAC,CAAD,CAAF,CAXH,GAYAH,GAAG,CAACG,CAAC,CAAC,CAAD,CAAF,CAZH,GAaA;AACAH,MAAAA,GAAG,CAACG,CAAC,CAAC,EAAD,CAAF,CAdH,GAeAH,GAAG,CAACG,CAAC,CAAC,EAAD,CAAF,CAfH,GAgBAH,GAAG,CAACG,CAAC,CAAC,EAAD,CAAF,CAhBH,GAiBAH,GAAG,CAACG,CAAC,CAAC,EAAD,CAAF,CAjBH,GAkBAH,GAAG,CAACG,CAAC,CAAC,EAAD,CAAF,CAlBH,GAmBAH,GAAG,CAACG,CAAC,CAAC,EAAD,CAAF,CApBA,CAAP;AAsBH,KA9BD;AA+BH,GAtCS,CAAV;AAwCA,SAAOP,GAAP;AACH","sourcesContent":["// generate-api-key.js\n// our API key maker module\n\n/*\n|--------------------------------------------------------------------------\n| UUID (API Key) Generation\n|--------------------------------------------------------------------------\n|\n| The following code generates a random, unique hexadecimal string that can be\n| to uniquely identify an object, like a user api key.\n| The code is based off of a kind comment at https://gist.github.com/jed/982883\n|\n*/\n\nimport crypto from 'crypto';\n\nexport default function generateAPIKey() {\n    let key = new Promise(function(resolve, reject) {\n        let hex = [];\n\n        for (var i = 0; i < 256; i++) {\n            hex[i] = (i < 16 ? '0' : '') + (i).toString(16);\n        }\n        let r = new Uint8Array(16);\n        crypto.randomFill(r, (err, buf) => {\n            if (err) throw err;\n            console.log(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength)\n                .toString('hex'));\n\n            r[6] = r[6] & 0x0f | 0x40;\n            r[8] = r[8] & 0x3f | 0x80;\n\n            resolve(\n                hex[r[0]] +\n                hex[r[1]] +\n                hex[r[2]] +\n                hex[r[3]] +\n                // \"-\" +\n                hex[r[4]] +\n                hex[r[5]] +\n                // \"-\" +\n                hex[r[6]] +\n                hex[r[7]] +\n                // \"-\" +\n                hex[r[8]] +\n                hex[r[9]] +\n                // \"-\" +\n                hex[r[10]] +\n                hex[r[11]] +\n                hex[r[12]] +\n                hex[r[13]] +\n                hex[r[14]] +\n                hex[r[15]]\n            );\n        });\n    })\n\n    return key;\n}\n"],"file":"generate-api-key.js"}