{"version":3,"sources":["../source/server.js"],"names":["result","process","env","NODE_ENV","dotenv","config","exphbs","handlebars","create","exphbsConfig","app","set","PORT","use","bodyParser","urlencoded","extended","json","express","static","checkCookie","engine","checkApiKey","checkAuth","index","auth","countries","years","pollutants","hotPort","get","server","listen","console","log"],"mappings":"AAAA,a,CAEA;;;;;;;AACA;;AAIA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AAGA;;AAIA;;AACA;;AACA;;AACA;;;;AA3BA,MAAMA,MAAM,GAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,aAAzB,GAA0CC,gBAAOC,MAAP,EAA1C,GAA4D,KAA3E,C,CAEA;;AAmBA,MAAMC,MAAM,GAAGC,2BAAWC,MAAX,CAAkBC,qBAAlB,CAAf,C,CAEA;;;AAMA;AACA,MAAMC,GAAG,GAAG,uBAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBV,OAAO,CAACC,GAAR,CAAYU,IAAZ,IAAoB,IAApC;AACAF,GAAG,CAACG,GAAJ,CAAQC,oBAAWC,UAAX,CAAsB;AAC1BC,EAAAA,QAAQ,EAAE;AADgB,CAAtB,CAAR;AAGAN,GAAG,CAACG,GAAJ,CAAQC,oBAAWG,IAAX,EAAR;AACAP,GAAG,CAACG,GAAJ,CAAQK,iBAAQC,MAAR,CAAe,QAAf,CAAR;AACAT,GAAG,CAACG,GAAJ,CAAQ,gCAAR;AACAH,GAAG,CAACG,GAAJ,CAAQ,4BAAR;AACAH,GAAG,CAACG,GAAJ,CAAQO,oBAAR,E,CAEA;;AACAV,GAAG,CAACW,MAAJ,CAAW,YAAX,EAAyBf,MAAM,CAACe,MAAhC;AACAX,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,YAAvB,E,CAEA;;AACA,gC,CAEA;;AACAD,GAAG,CAACG,GAAJ,CAAQ,UAAR,EAAoBS,oBAApB;AACAZ,GAAG,CAACG,GAAJ,CAAQ,UAAR,EAAoBU,kBAApB,E,CAEA;;AACAb,GAAG,CAACG,GAAJ,CAAQW,cAAR;AACAd,GAAG,CAACG,GAAJ,CAAQY,aAAR;AACAf,GAAG,CAACG,GAAJ,CAAQa,kBAAR;AACAhB,GAAG,CAACG,GAAJ,CAAQc,cAAR;AACAjB,GAAG,CAACG,GAAJ,CAAQe,mBAAR,E,CAEA;;AACA,MAAMC,OAAO,GAAGnB,GAAG,CAACoB,GAAJ,CAAQ,MAAR,CAAhB;AACA,MAAMC,MAAM,GAAGrB,GAAG,CAACsB,MAAJ,CAAWH,OAAX,EAAoB,MAAM;AACrCI,EAAAA,OAAO,CAACC,GAAR,CAAa,yBAAwBL,OAAQ,GAA7C;AACH,CAFc,CAAf,C,CAIA;;eACeE,M","sourcesContent":["'use strict'\n\n// environment setup\nimport dotenv from 'dotenv'\nconst result = (process.env.NODE_ENV == 'development') ? dotenv.config() : false\n\n// dependencies\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport handlebars from 'express-handlebars'\nimport expressValidator from 'express-validator'\nimport cookieParser from 'cookie-parser'\n\n// controllers\nimport index from './controllers/index.js'\nimport auth from './controllers/auth.js'\nimport countries from './controllers/countries.js'\nimport years from './controllers/years.js'\nimport pollutants from './controllers/pollutants.js'\n\n// db and models\nimport database from './database/database.js'\n\n// handlebars helpers\nimport exphbsConfig from './config/exphbs-config.js'\nconst exphbs = handlebars.create(exphbsConfig);\n\n// middlewares\nimport checkAuth from './lib/check-auth.js'\nimport checkCookie from './lib/check-cookie.js'\nimport checkApiKey from './lib/check-api-key.js'\nimport checkMasterList from './lib/check-master-list.js'\n\n// set our express options\nconst app = express();\napp.set('port', process.env.PORT || 3000);\napp.use(bodyParser.urlencoded({\n    extended: true\n}));\napp.use(bodyParser.json());\napp.use(express.static('public'));\napp.use(expressValidator());\napp.use(cookieParser());\napp.use(checkCookie);\n\n// set our view engine\napp.engine('handlebars', exphbs.engine);\napp.set('view engine', 'handlebars');\n\n// check our list of api keys\ncheckMasterList();\n\n// middlewares\napp.use('/country', checkApiKey)\napp.use('/profile', checkAuth)\n\n// routes\napp.use(index);\napp.use(auth);\napp.use(countries);\napp.use(years);\napp.use(pollutants);\n\n// face the world\nconst hotPort = app.get('port');\nconst server = app.listen(hotPort, () => {\n    console.log(`App listening on port ${hotPort}!`)\n});\n\n// for Mocha/Chai test purposes\nexport default server;\n"],"file":"server.js"}